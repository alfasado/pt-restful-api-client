!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.PTRESTfulAPIClient=e():t.PTRESTfulAPIClient=e()}(this,(function(){return(()=>{"use strict";var t={314:function(t,e,r){var a=this&&this.__createBinding||(Object.create?function(t,e,r,a){void 0===a&&(a=r),Object.defineProperty(t,a,{enumerable:!0,get:function(){return e[r]}})}:function(t,e,r,a){void 0===a&&(a=r),t[a]=e[r]}),n=this&&this.__exportStar||function(t,e){for(var r in t)"default"===r||Object.prototype.hasOwnProperty.call(e,r)||a(e,t,r)};Object.defineProperty(e,"__esModule",{value:!0}),n(r(699),e);e.default=class{constructor(t,e){if(!t)throw"Paramater `apiPath` is required.";if(isNaN(e)||0===e)throw"Paramater `apiVersion` is required.";this.basePath=`${t}/v${e}`}async postData(t,e={},r=null,a="post"){const n={"Content-Type":"application/json"};r&&(n["X-PCMSX-Authorization"]=r);return await fetch(t,{method:a,mode:"cors",cache:"no-cache",credentials:"include",headers:n,body:JSON.stringify(e)})}async getData(t,e={},r=null){let a={};r&&(a={headers:{"X-PCMSX-Authorization":r}});let n="";if(Object.keys(e).length){const t=new URLSearchParams(e).toString();t&&(n="?"+t)}return await fetch(`${t}${n}`,a)}async runFetch(t,e,r=0,a={},n={},i=null){let s,o;return s=-1===r?t:null===r?`${this.basePath}${t}`:`${this.basePath}/${r}${t}`,o="get"===e?await this.getData(s,a,i):await this.postData(s,n,i,e),o}async authentication(t,e,r=!1){if(!t)throw"Paramater `name` is required.";if(!e)throw"Paramater `password` is required.";const a={name:t,password:e,remember:r?1:0};return await this.runFetch("/authentication","post",null,{},a)}async listObjects(t,e=0,r={},a=null){if(!t)throw"Paramater `model` is required.";return await this.runFetch(`/${t}/list`,"get",e,r,{},a)}async doCRUDObject(t,e,r,a=0,n=null,i={},s={},o=null){if(!e)throw"Paramater `model` is required.";let c;if("insert"===t||"get"===t&&!r)c=`/${e}/${t}`;else{if(!r)throw"Paramater `id` is required.";"string"==typeof r&&(r=encodeURI(r)),c=`/${e}/${t}/${r}`}o||(o="get"===t?"get":"post");return await this.runFetch(c,o,a,i,s,n)}async createObject(t,e=0,r,a={}){return await this.doCRUDObject("insert",t,null,e,r,{},a)}async getObject(t,e,r=0,a={},n=null){return await this.doCRUDObject("get",t,e,r,n,a)}async updateObject(t,e,r=0,a,n={},i="put"){return await this.doCRUDObject("update",t,e,r,a,{},n,i)}async deleteObject(t,e,r=0,a,n="delete"){return await this.doCRUDObject("delete",t,e,r,a,{},{},n)}async getScheme(t,e,r=0,a=null){if(!t)throw"Paramater `model` is required.";if(!e)throw"Paramater `token` is required.";let n={};a&&(n={keys:a});return await this.runFetch(`/${t}/scheme`,"get",r,n,{},e)}async postContact(t,e,r=0,a={}){if(!e)throw"Paramater `formId` is required.";return await this.runFetch(`/contact/${t}/${e}`,"post",r,{},a)}async getContactToken(t,e=0){return await this.postContact("token",t,e)}async confirmContact(t,e=0,r={}){return await this.postContact("confirm",t,e,r)}async submitContact(t,e=0,r={}){return await this.postContact("submit",t,e,r)}async searchObjects(t,e=0,r={}){return await this.runFetch(`/${t}/search`,"get",e,r)}}},699:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0})}},e={};var r=function r(a){var n=e[a];if(void 0!==n)return n.exports;var i=e[a]={exports:{}};return t[a].call(i.exports,i,i.exports,r),i.exports}(314);return r=r.default})()}));